#summary Proxy Limitations

= Headers =

While this proxy attempts to be as transparent as possible, there are a couple of things that break this (unless I can find a way to fix them in the future).

== Headers from the backend to the client ==

Any and all headers should be sent from the backend to the client with no modification. Note however that PHP simply overwrites existing headers with the header() function. If the PHP proxy or the server on which it resides adds headers that are not existent on the backend, they will remain.

So, you have the headers from the backend untouched along with any extra headers on the proxy that aren't overwritten.

== Headers from the client to the backend ==

The following headers are forced by the proxy:

 * "Host: " is forced because, obviously, it's the address of the backend we need to set.
 * "GET: " or "POST: " is forced because we are addressing a different path as well as adding the query string for GET requests.
 * "Accept-Charset: " is forced to `ISO-8859-1,utf-8;q=0.7,*;q=0.7` because it doesn't work without it, beats me why (I get a 400 error)
 * "Connection: " is forced to `close` at the end of the request (before the data) because keep-alive isn't supported.

That last bit means that this proxy is non-streaming. If it were, my browser sending "Connection: keep-alive" would work fine and I'd jump for joy... But that's not the case.